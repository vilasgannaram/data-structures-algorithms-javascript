/**
 * @param {character[][]} board
 * @return {boolean}
 */

function isValidSudoku(board) {
	const rows = {};
	const cols = {};
	const squares = {};

	for (let i = 0; i < 9; i++) {
		for (let j = 0; j < 9; j++) {
			const num = board[i][j];

			if (num === '.') continue;
			const grid = `${Math.floor(i / 3)}${Math.floor(j / 3)}`;

			if (!cols[j]) cols[j] = new Set();
			if (!rows[i]) rows[i] = new Set();
			if (!squares[grid]) squares[grid] = new Set();

			if (rows[i].has(num) || cols[j].has(num) || squares[grid].has(num))
				return false;

			cols[j].add(num);
			rows[i].add(num);
			squares[grid].add(num);
		}
	}

	return true;
}

console.log(
	isValidSudoku([
		['5', '3', '.', '.', '7', '.', '.', '.', '.'],
		['6', '.', '.', '1', '9', '5', '.', '.', '.'],
		['.', '9', '8', '.', '.', '.', '.', '6', '.'],
		['8', '.', '.', '.', '6', '.', '.', '.', '3'],
		['4', '.', '.', '8', '.', '3', '.', '.', '1'],
		['7', '.', '.', '.', '2', '.', '.', '.', '6'],
		['.', '6', '.', '.', '.', '.', '2', '8', '.'],
		['.', '.', '.', '4', '1', '9', '.', '.', '5'],
		['.', '.', '.', '.', '8', '.', '.', '7', '9'],
	])
);

// console.log(
//     isValidSudoku([
//         ["8", "3", ".", ".", "7", ".", ".", ".", "."],
//         ["6", ".", ".", "1", "9", "5", ".", ".", "."],
//         [".", "9", "8", ".", ".", ".", ".", "6", "."],
//         ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
//         ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
//         ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
//         [".", "6", ".", ".", ".", ".", "2", "8", "."],
//         [".", ".", ".", "4", "1", "9", ".", ".", "5"],
//         [".", ".", ".", ".", "8", ".", ".", "7", "9"],
//     ])
// );
